[{"path":"https://rmgpanw.github.io/epiUtils/articles/epiUtils.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with epiUtils","text":"epiUtils package provides essential tools epidemiological analysis, including: Age-standardised rate calculations using direct standardisation Person-years computation cohort studies age stratification Built-2000-2025 World Standard Population data vignette demonstrates key functions using practical examples.","code":""},{"path":"https://rmgpanw.github.io/epiUtils/articles/epiUtils.html","id":"who-world-standard-population","dir":"Articles","previous_headings":"","what":"WHO World Standard Population","title":"Getting Started with epiUtils","text":"package includes 2000-2025 World Standard Population data, commonly used age standardisation epidemiological studies.","code":"# Load the WHO standard population data data(\"who_2000_2025_standard_population\")  # View the structure head(who_2000_2025_standard_population) #> # A tibble: 6 × 6 #>   age_group who_world_standard_perc…¹ recalculation_to_add…² rounded_to_integers #>   <chr>                         <dbl>                  <dbl>               <int> #> 1 0-4                            8.86                 88569.               88569 #> 2 5-9                            8.69                 86870.               86870 #> 3 10-14                          8.6                  85970.               85970 #> 4 15-19                          8.47                 84670.               84670 #> 5 20-24                          8.22                 82171.               82171 #> 6 25-29                          7.93                 79272.               79272 #> # ℹ abbreviated names: ¹​who_world_standard_percent, #> #   ²​recalculation_to_add_to_1million #> # ℹ 2 more variables: standard_for_seer_stat <int>, lower_age_limit <int>  # Summary of the data str(who_2000_2025_standard_population) #> tibble [21 × 6] (S3: tbl_df/tbl/data.frame) #>  $ age_group                       : chr [1:21] \"0-4\" \"5-9\" \"10-14\" \"15-19\" ... #>  $ who_world_standard_percent      : num [1:21] 8.86 8.69 8.6 8.47 8.22 7.93 7.61 7.15 6.59 6.04 ... #>  $ recalculation_to_add_to_1million: num [1:21] 88569 86870 85970 84670 82171 ... #>  $ rounded_to_integers             : int [1:21] 88569 86870 85970 84670 82171 79272 76073 71475 65877 60379 ... #>  $ standard_for_seer_stat          : int [1:21] 88569 86870 85970 84670 82171 79272 76073 71475 65877 60379 ... #>  $ lower_age_limit                 : int [1:21] 0 5 10 15 20 25 30 35 40 45 ..."},{"path":"https://rmgpanw.github.io/epiUtils/articles/epiUtils.html","id":"example-1-calculate-person-years-by-age-strata","dir":"Articles","previous_headings":"","what":"Example 1: Calculate Person-Years by Age Strata","title":"Getting Started with epiUtils","text":"Let’s start example calculating person-years cohort study. ’ll create example data use built-function.","code":"# Create example cohort data set.seed(123) n_patients <- 100  cohort_data <- data.frame(   patient_id = 1:n_patients,   dob = as.Date(\"1950-01-01\") + sample(-7300:7300, n_patients, replace = TRUE), # Random dates ±20 years   study_entry_date = as.Date(\"2020-01-01\") + sample(0:365, n_patients, replace = TRUE),   study_exit_date = as.Date(\"2023-01-01\") + sample(0:730, n_patients, replace = TRUE),   event_status = sample(c(0L, 1L), n_patients, replace = TRUE, prob = c(0.8, 0.2)) )  # Ensure study_exit_date is after study_entry_date cohort_data$study_exit_date <- pmax(   cohort_data$study_exit_date,    cohort_data$study_entry_date + 30 )  # View first few rows head(cohort_data) #>   patient_id        dob study_entry_date study_exit_date event_status #> 1          1 1936-10-03       2020-10-12      2023-05-05            0 #> 2          2 1936-11-20       2020-06-07      2023-09-22            0 #> 3          3 1958-07-16       2020-04-30      2023-07-05            1 #> 4          4 1953-11-18       2020-04-19      2024-07-26            0 #> 5          5 1964-03-10       2020-06-06      2023-09-09            0 #> 6          6 1938-03-10       2020-03-04      2024-04-02            0  # Calculate person-years by 5-year age groups (default) person_years_5yr <- calculate_person_years_by_age_strata(cohort_data) print(person_years_5yr) #> # A tibble: 20 × 4 #>    age_group person_years events     n #>    <fct>            <dbl>  <int> <int> #>  1 [0-5)              0        0     0 #>  2 [5-10)             0        0     0 #>  3 [10-15)            0        0     0 #>  4 [15-20)            0        0     0 #>  5 [20-25)            0        0     0 #>  6 [25-30)            0        0     0 #>  7 [30-35)            0        0     0 #>  8 [35-40)            0        0     0 #>  9 [40-45)            0        0     0 #> 10 [45-50)            0        0     0 #> 11 [50-55)           28.5      0    14 #> 12 [55-60)           48.5      5    24 #> 13 [60-65)           50.6      4    25 #> 14 [65-70)           66.5      3    29 #> 15 [70-75)           42.7      0    21 #> 16 [75-80)           27.6      4    18 #> 17 [80-85)           42.2      0    20 #> 18 [85-90)           32.5      1    21 #> 19 [90-95)           16.3      1     7 #> 20 [95-100)           0        0     0  # Calculate person-years using custom age groups (10-year groups) person_years_10yr <- calculate_person_years_by_age_strata(   cohort_data,    age_cut_points = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100) ) print(person_years_10yr) #> # A tibble: 10 × 4 #>    age_group person_years events     n #>    <fct>            <dbl>  <int> <int> #>  1 [0-10)             0        0     0 #>  2 [10-20)            0        0     0 #>  3 [20-30)            0        0     0 #>  4 [30-40)            0        0     0 #>  5 [40-50)            0        0     0 #>  6 [50-60)           77.0      5    24 #>  7 [60-70)          117.       7    39 #>  8 [70-80)           70.3      4    30 #>  9 [80-90)           74.7      1    28 #> 10 [90-100)          16.3      1     7"},{"path":"https://rmgpanw.github.io/epiUtils/articles/epiUtils.html","id":"example-2-age-standardised-rates-with-who-standard-population","dir":"Articles","previous_headings":"","what":"Example 2: Age-Standardised Rates with WHO Standard Population","title":"Getting Started with epiUtils","text":"Now let’s calculate age-standardised incidence rates using standard population. ’ll use person-years data just calculated.","code":"# Prepare data for ASR calculation using WHO standard population # We need to match our age groups to the WHO standard population  # First, let's see what age groups we have in our person-years data print(\"Age groups in our data:\") #> [1] \"Age groups in our data:\" print(person_years_10yr$age_group) #>  [1] [0-10)   [10-20)  [20-30)  [30-40)  [40-50)  [50-60)  [60-70)  [70-80)  #>  [9] [80-90)  [90-100) #> 10 Levels: [0-10) [10-20) [20-30) [30-40) [40-50) [50-60) [60-70) ... [90-100)  print(\"Age groups in WHO standard population:\") #> [1] \"Age groups in WHO standard population:\" print(who_2000_2025_standard_population$age_group) #>  [1] \"0-4\"   \"5-9\"   \"10-14\" \"15-19\" \"20-24\" \"25-29\" \"30-34\" \"35-39\" \"40-44\" #> [10] \"45-49\" \"50-54\" \"55-59\" \"60-64\" \"65-69\" \"70-74\" \"75-79\" \"80-84\" \"85-89\" #> [19] \"90-94\" \"95-99\" \"100+\"  # Create a mapping to match our 10-year age groups to WHO standard population # We'll aggregate WHO age groups to match our 10-year groups who_aggregated <- who_2000_2025_standard_population |>   mutate(     age_group_10yr = case_when(       lower_age_limit < 10 ~ \"[0-10)\",       lower_age_limit < 20 ~ \"[10-20)\",       lower_age_limit < 30 ~ \"[20-30)\",       lower_age_limit < 40 ~ \"[30-40)\",       lower_age_limit < 50 ~ \"[40-50)\",       lower_age_limit < 60 ~ \"[50-60)\",       lower_age_limit < 70 ~ \"[60-70)\",       lower_age_limit < 80 ~ \"[70-80)\",       lower_age_limit < 90 ~ \"[80-90)\",       TRUE ~ \"[90-100)\"     )   ) |>   group_by(age_group_10yr) |>   summarise(     standard_pop = sum(standard_for_seer_stat),     .groups = \"drop\"   )  print(\"Aggregated WHO standard population:\") #> [1] \"Aggregated WHO standard population:\" print(who_aggregated) #> # A tibble: 10 × 2 #>    age_group_10yr standard_pop #>    <chr>                 <int> #>  1 [0-10)               175439 #>  2 [10-20)              170640 #>  3 [20-30)              161443 #>  4 [30-40)              147548 #>  5 [40-50)              126256 #>  6 [50-60)               99165 #>  7 [60-70)               66777 #>  8 [70-80)               37287 #>  9 [80-90)               13495 #> 10 [90-100)               1950  # Merge with our person-years data asr_data <- person_years_10yr |>   left_join(who_aggregated, by = c(\"age_group\" = \"age_group_10yr\")) |>   filter(!is.na(standard_pop)) |>  # Remove any age groups not in WHO data   filter(person_years > 0) |>  # Ensure positive person-years for all groups   select(age_group, events, person_years, standard_pop)  print(\"Data prepared for ASR calculation:\") #> [1] \"Data prepared for ASR calculation:\" print(asr_data) #> # A tibble: 5 × 4 #>   age_group events person_years standard_pop #>   <chr>      <int>        <dbl>        <int> #> 1 [50-60)        5         77.0        99165 #> 2 [60-70)        7        117.         66777 #> 3 [70-80)        4         70.3        37287 #> 4 [80-90)        1         74.7        13495 #> 5 [90-100)       1         16.3         1950  # Calculate age-standardised rates asr_result <- calculate_asr_direct(asr_data) #> Warning: ! Found age groups with small/zero case counts: #> • < 5 cases: [70-80) (4 cases), [80-90) (1 case), [90-100) (1 case) #> ℹ Small and zero case counts may produce unstable rate estimates #> ℹ Consider wider age groups, longer follow-up, or data quality checks  # Display results print(\"Age-Standardised Rate Results:\") #> [1] \"Age-Standardised Rate Results:\" print(paste(\"Crude rate:\", round(asr_result$crude_rate_scaled, 2), \"per 100,000\")) #> [1] \"Crude rate: 5064.91 per 100,000\" print(paste(\"Age-standardised rate:\", round(asr_result$asr_scaled, 2), \"per 100,000\")) #> [1] \"Age-standardised rate: 5879.46 per 100,000\" print(paste(\"95% CI:\", round(asr_result$ci_lower_scaled, 2), \"-\", round(asr_result$ci_upper_scaled, 2))) #> [1] \"95% CI: 3219.59 - 10140.92\"  # View age-specific details print(\"Age-specific details:\") #> [1] \"Age-specific details:\" print(asr_result$age_specific_data[[1]]) #> # A tibble: 5 × 8 #>   age_group events person_years standard_pop age_specific_rate std_weight #>   <chr>      <int>        <dbl>        <int>             <dbl>      <dbl> #> 1 [50-60)        5         77.0        99165            0.0650    0.453   #> 2 [60-70)        7        117.         66777            0.0598    0.305   #> 3 [70-80)        4         70.3        37287            0.0569    0.171   #> 4 [80-90)        1         74.7        13495            0.0134    0.0617  #> 5 [90-100)       1         16.3         1950            0.0614    0.00892 #> # ℹ 2 more variables: age_specific_rate_scaled <dbl>, contribution_to_asr <dbl>  # Note: We filtered out age groups with zero person-years above # The function requires positive person-years but allows zero/small case counts"},{"path":"https://rmgpanw.github.io/epiUtils/articles/epiUtils.html","id":"handling-small-case-counts","dir":"Articles","previous_headings":"Example 2: Age-Standardised Rates with WHO Standard Population","what":"Handling Small Case Counts","title":"Getting Started with epiUtils","text":"calculate_asr_direct() function includes built-warnings small case counts, help users make informed decisions age grouping strategies. warnings raised regardless confidence interval method used.","code":"# Create example data with small case counts to demonstrate warnings small_cases_data <- data.frame(   age_group = c(\"0-20\", \"20-40\", \"40-60\", \"60-80\"),   events = c(0L, 2L, 4L, 15L),  # Mix of zero and small case counts   person_years = c(10000, 15000, 20000, 18000),   standard_pop = c(25000, 30000, 20000, 15000) )  print(\"Data with small case counts:\") #> [1] \"Data with small case counts:\" print(small_cases_data) #>   age_group events person_years standard_pop #> 1      0-20      0        10000        25000 #> 2     20-40      2        15000        30000 #> 3     40-60      4        20000        20000 #> 4     60-80     15        18000        15000  # Calculate ASR - will show warnings about small case counts print(\"With warnings (default):\") #> [1] \"With warnings (default):\" result_with_warnings <- calculate_asr_direct(small_cases_data) #> Warning: ! Found age groups with small/zero case counts: #> • zero cases: 0-20 and < 5 cases: 20-40 (2 cases), 40-60 (4 cases) #> ℹ Small and zero case counts may produce unstable rate estimates #> ℹ Consider wider age groups, longer follow-up, or data quality checks  # Calculate ASR with warnings disabled print(\"With warnings disabled:\") #> [1] \"With warnings disabled:\" result_no_warnings <- calculate_asr_direct(small_cases_data, warn_small_cases = FALSE)  # Results are identical regardless of warning setting print(paste(\"ASR:\", round(result_with_warnings$asr_scaled, 2), \"per 100,000\")) #> [1] \"ASR: 22.78 per 100,000\""},{"path":"https://rmgpanw.github.io/epiUtils/articles/epiUtils.html","id":"confidence-interval-methods","dir":"Articles","previous_headings":"Example 2: Age-Standardised Rates with WHO Standard Population","what":"Confidence Interval Methods","title":"Getting Started with epiUtils","text":"function supports two methods calculating confidence intervals, controlled ci_method parameter. Understanding differences helps choose appropriate method analysis.","code":""},{"path":"https://rmgpanw.github.io/epiUtils/articles/epiUtils.html","id":"method-overview","dir":"Articles","previous_headings":"Example 2: Age-Standardised Rates with WHO Standard Population > Confidence Interval Methods","what":"Method Overview","title":"Getting Started with epiUtils","text":"“gamma” (default): Uses gamma distribution approach “byars”: Uses Byar’s approximation Dobson adjustment","code":""},{"path":"https://rmgpanw.github.io/epiUtils/articles/epiUtils.html","id":"technical-differences","dir":"Articles","previous_headings":"Example 2: Age-Standardised Rates with WHO Standard Population > Confidence Interval Methods","what":"Technical Differences","title":"Getting Started with epiUtils","text":"Gamma Method: - Based gamma distribution, naturally models positive rate data - Automatically ensures confidence intervals always positive (negative) - Particularly robust small case counts low rates - Consistent epitools::ageadjust.direct() - Uses shape scale parameters derived observed data Byar’s/Dobson Method: - Traditional epidemiological approach dating 1970s-80s - Uses normal approximation continuity corrections larger counts - Uses exact Poisson-based intervals small counts (<10 total cases) - Consistent PHEindicatormethods::calculate_dsr() - May occasionally produce slightly wider intervals small counts","code":"# Compare confidence interval methods using the same data print(\"Gamma method (default):\") #> [1] \"Gamma method (default):\" result_gamma <- calculate_asr_direct(small_cases_data, warn_small_cases = FALSE) print(paste(\"ASR:\", round(result_gamma$asr_scaled, 2),              \"95% CI:\", round(result_gamma$ci_lower_scaled, 2), \"-\",              round(result_gamma$ci_upper_scaled, 2))) #> [1] \"ASR: 22.78 95% CI: 13.66 - 38.47\"  print(\"Byar's/Dobson method:\") #> [1] \"Byar's/Dobson method:\" result_byars <- calculate_asr_direct(small_cases_data, ci_method = \"byars\", warn_small_cases = FALSE) print(paste(\"ASR:\", round(result_byars$asr_scaled, 2),              \"95% CI:\", round(result_byars$ci_lower_scaled, 2), \"-\",              round(result_byars$ci_upper_scaled, 2))) #> [1] \"ASR: 22.78 95% CI: 12.2 - 33.36\"  # The point estimates are identical, but confidence intervals may differ print(\"Point estimates are identical:\",        round(result_gamma$asr_scaled, 10) == round(result_byars$asr_scaled, 10)) #> [1] \"Point estimates are identical:\"  # Calculate the difference in CI width gamma_width <- result_gamma$ci_upper_scaled - result_gamma$ci_lower_scaled byars_width <- result_byars$ci_upper_scaled - result_byars$ci_lower_scaled print(paste(\"CI width difference:\", round(abs(gamma_width - byars_width), 2))) #> [1] \"CI width difference: 3.64\""},{"path":"https://rmgpanw.github.io/epiUtils/articles/epiUtils.html","id":"practical-implications","dir":"Articles","previous_headings":"Example 2: Age-Standardised Rates with WHO Standard Population > Confidence Interval Methods","what":"Practical Implications","title":"Getting Started with epiUtils","text":"results differ: - Differences typically small moderate large case counts (>20 total cases) - noticeable differences may occur small case counts low rates - gamma method tends slightly conservative (wider intervals) extremely small counts - methods statistically valid widely accepted Method selection guidance: - Use gamma (default) analyses, especially small case counts low rates - Use byars : - Comparing historical studies used Byar’s method - Institutional requirements specify traditional approach - methods converge similar results sample sizes increase","code":""},{"path":"https://rmgpanw.github.io/epiUtils/articles/epiUtils.html","id":"example-3-using-who-standard-population-directly","dir":"Articles","previous_headings":"","what":"Example 3: Using WHO Standard Population Directly","title":"Getting Started with epiUtils","text":"straightforward example, let’s create synthetic cancer incidence data directly matches standard population age groups.","code":"# Create synthetic cancer incidence data using WHO age groups set.seed(456)  # Use WHO age groups directly (first 15 age groups, up to 75+) cancer_data <- who_2000_2025_standard_population |>   slice(1:15) |>  # Use first 15 age groups (0-74)   mutate(     # Simulate population sizes (person-years)     person_years = round(runif(n(), min = 50000, max = 200000)),     # Simulate cancer cases with age-specific rates     # Higher rates in older age groups     age_specific_rate = case_when(       lower_age_limit < 20 ~ runif(1, 0.00001, 0.00005),       lower_age_limit < 40 ~ runif(1, 0.00005, 0.0002),       lower_age_limit < 60 ~ runif(1, 0.0002, 0.001),       TRUE ~ runif(1, 0.001, 0.003)     ),     events = as.integer(round(person_years * age_specific_rate))   ) |>   select(age_group, events, person_years, standard_pop = standard_for_seer_stat)  print(\"Synthetic cancer incidence data:\") #> [1] \"Synthetic cancer incidence data:\" print(cancer_data) #> # A tibble: 15 × 4 #>    age_group events person_years standard_pop #>    <chr>      <int>        <dbl>        <int> #>  1 0-4            2        63433        88569 #>  2 5-9            3        81577        86870 #>  3 10-14          6       159943        85970 #>  4 15-19          6       177820        84670 #>  5 20-24         30       168260        82171 #>  6 25-29         18        99794        79272 #>  7 30-34         11        62365        76073 #>  8 35-39         16        92829        71475 #>  9 40-44         48        85625        65877 #> 10 45-49         61       107785        60379 #> 11 50-54         60       105942        53681 #> 12 55-59         47        82686        45484 #> 13 60-64        397       163266        37187 #> 14 65-69        422       173252        29590 #> 15 70-74        340       139838        22092  # Calculate age-standardised incidence rates cancer_asr <- calculate_asr_direct(cancer_data) #> Warning: ! Found age groups with small/zero case counts: #> • < 5 cases: 0-4 (2 cases), 5-9 (3 cases) #> ℹ Small and zero case counts may produce unstable rate estimates #> ℹ Consider wider age groups, longer follow-up, or data quality checks  print(\"Cancer Incidence Results:\") #> [1] \"Cancer Incidence Results:\" print(paste(\"Crude incidence rate:\", round(cancer_asr$crude_rate_scaled, 1), \"per 100,000\")) #> [1] \"Crude incidence rate: 83.1 per 100,000\" print(paste(\"Age-standardised incidence rate:\", round(cancer_asr$asr_scaled, 1), \"per 100,000\")) #> [1] \"Age-standardised incidence rate: 42.3 per 100,000\" print(paste(\"95% CI:\", round(cancer_asr$ci_lower_scaled, 1), \"-\", round(cancer_asr$ci_upper_scaled, 1), \"per 100,000\")) #> [1] \"95% CI: 39.7 - 45.2 per 100,000\""},{"path":"https://rmgpanw.github.io/epiUtils/articles/epiUtils.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Getting Started with epiUtils","text":"Let’s create visualizations better understand results.","code":"# Plot age-specific rates age_specific_data <- cancer_asr$age_specific_data[[1]]  # Age-specific rates plot p1 <- ggplot(age_specific_data, aes(x = age_group, y = age_specific_rate_scaled)) +   geom_col(fill = \"steelblue\", alpha = 0.7) +   theme_minimal() +   labs(     title = \"Age-Specific Cancer Incidence Rates\",     x = \"Age Group\",     y = \"Rate per 100,000\"   ) +   theme(axis.text.x = element_text(angle = 45, hjust = 1))  print(p1) # Contribution to ASR plot p2 <- ggplot(age_specific_data, aes(x = age_group, y = contribution_to_asr * 100000)) +   geom_col(fill = \"darkgreen\", alpha = 0.7) +   theme_minimal() +   labs(     title = \"Contribution of Each Age Group to Age-Standardised Rate\",     x = \"Age Group\",     y = \"Contribution per 100,000\"   ) +   theme(axis.text.x = element_text(angle = 45, hjust = 1))  print(p2) # Compare crude vs age-standardised rates comparison_data <- data.frame(   Rate_Type = c(\"Crude Rate\", \"Age-Standardised Rate\"),   Rate = c(cancer_asr$crude_rate_scaled, cancer_asr$asr_scaled),   CI_Lower = c(NA, cancer_asr$ci_lower_scaled),   CI_Upper = c(NA, cancer_asr$ci_upper_scaled) )  p3 <- ggplot(comparison_data, aes(x = Rate_Type, y = Rate)) +   geom_col(fill = c(\"orange\", \"purple\"), alpha = 0.7, width = 0.5) +   geom_errorbar(     aes(ymin = CI_Lower, ymax = CI_Upper),      width = 0.2,      na.rm = TRUE   ) +   theme_minimal() +   labs(     title = \"Crude vs Age-Standardised Cancer Incidence Rates\",     x = \"Rate Type\",     y = \"Rate per 100,000\"   )  print(p3)"},{"path":[]},{"path":"https://rmgpanw.github.io/epiUtils/articles/epiUtils.html","id":"calculate_person_years_by_age_strata","dir":"Articles","previous_headings":"Key Features Summary","what":"calculate_person_years_by_age_strata()","title":"Getting Started with epiUtils","text":"Calculates person-years follow-age groups Handles age transitions follow-period Flexible age group definitions Returns events person-years age strata","code":""},{"path":"https://rmgpanw.github.io/epiUtils/articles/epiUtils.html","id":"calculate_asr_direct","dir":"Articles","previous_headings":"Key Features Summary","what":"calculate_asr_direct()","title":"Getting Started with epiUtils","text":"Calculates age-standardised rates using direct standardisation Supports two confidence interval methods: gamma distribution (default) Byar’s/Dobson approximation Includes smart warnings small/zero case counts user control Requires data columns: age_group, events, person_years, standard_pop Returns comprehensive results including crude rates, ASRs, confidence intervals","code":""},{"path":"https://rmgpanw.github.io/epiUtils/articles/epiUtils.html","id":"who-standard-population-data","dir":"Articles","previous_headings":"Key Features Summary","what":"WHO Standard Population Data","title":"Getting Started with epiUtils","text":"Ready--use 2000-2025 World Standard Population Multiple standard population formats available Easily integrates package functions vignette demonstrates basic usage key functions epiUtils. detailed information specific functions, see individual help pages.","code":""},{"path":"https://rmgpanw.github.io/epiUtils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alasdair Warwick. Author, maintainer, copyright holder.","code":""},{"path":"https://rmgpanw.github.io/epiUtils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Warwick (2025). epiUtils: Epidemiological Analysis Utilities. R package version 0.0.0.9000, https://rmgpanw.github.io/epiUtils/.","code":"@Manual{,   title = {epiUtils: Epidemiological Analysis Utilities},   author = {Alasdair Warwick},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://rmgpanw.github.io/epiUtils/}, }"},{"path":"https://rmgpanw.github.io/epiUtils/index.html","id":"epiutils","dir":"","previous_headings":"","what":"Epidemiological Analysis Utilities","title":"Epidemiological Analysis Utilities","text":"epiUtils provides essential tools epidemiological analysis, including age-standardised rate calculations person-years computation cohort studies. package implements established epidemiological methods modern R practices, comprehensive validation, built-standard population data.","code":""},{"path":"https://rmgpanw.github.io/epiUtils/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Epidemiological Analysis Utilities","text":"Age-Standardised Rates: Calculate directly standardised rates gamma Byar’s confidence intervals Person-Years Calculation: Compute person-years age strata automatic age-transition handling Standard Population: Built-2000-2025 World Standard Population data","code":""},{"path":"https://rmgpanw.github.io/epiUtils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Epidemiological Analysis Utilities","text":"can install development version epiUtils GitHub :","code":"# install.packages(\"pak\") pak::pak(\"alasdair/epiUtils\")"},{"path":[]},{"path":"https://rmgpanw.github.io/epiUtils/index.html","id":"age-standardised-rates","dir":"","previous_headings":"Quick Start","what":"Age-Standardised Rates","title":"Epidemiological Analysis Utilities","text":"Calculate age-standardised incidence rates using direct standardisation method:","code":"library(epiUtils)  # Example cancer incidence data cancer_data <- data.frame(   age_group = c(\"0-19\", \"20-39\", \"40-59\", \"60-79\", \"80+\"),   events = c(2L, 8L, 45L, 120L, 89L),   person_years = c(50000, 65000, 55000, 40000, 15000),   standard_pop = c(35000, 30000, 25000, 20000, 10000) )  # Calculate age-standardised rates result <- calculate_asr_direct(cancer_data) #> Warning: ! Found age groups with small/zero case counts: #> • < 5 cases: 0-19 (2 cases) #> ℹ Small and zero case counts may produce unstable rate estimates #> ℹ Consider wider age groups, longer follow-up, or data quality checks  # View results cat(\"Age-Standardised Rate:\", round(result$asr_scaled, 1), \"per 100,000\\n\") #> Age-Standardised Rate: 120.7 per 100,000 cat(\"95% CI:\", round(result$ci_lower_scaled, 1), \"-\", round(result$ci_upper_scaled, 1), \"\\n\") #> 95% CI: 106.4 - 136.5"},{"path":"https://rmgpanw.github.io/epiUtils/index.html","id":"person-years-calculation","dir":"","previous_headings":"Quick Start","what":"Person-Years Calculation","title":"Epidemiological Analysis Utilities","text":"Calculate person-years follow-age strata cohort studies:","code":"# Example cohort data cohort_data <- data.frame(   patient_id = 1:3,   dob = as.Date(c(\"1960-01-15\", \"1955-06-20\", \"1972-09-01\")),   study_entry_date = as.Date(c(\"2020-03-01\", \"2021-01-01\", \"2019-01-01\")),   study_exit_date = as.Date(c(\"2024-06-15\", \"2025-12-31\", \"2022-04-10\")),   event_status = c(1L, 0L, 1L) )  # Calculate person-years by age groups py_result <- calculate_person_years_by_age_strata(cohort_data) print(py_result) #> # A tibble: 20 × 4 #>    age_group person_years events     n #>    <fct>            <dbl>  <int> <int> #>  1 [0-5)            0          0     0 #>  2 [5-10)           0          0     0 #>  3 [10-15)          0          0     0 #>  4 [15-20)          0          0     0 #>  5 [20-25)          0          0     0 #>  6 [25-30)          0          0     0 #>  7 [30-35)          0          0     0 #>  8 [35-40)          0          0     0 #>  9 [40-45)          0          0     0 #> 10 [45-50)          3.27       1     1 #> 11 [50-55)          0          0     0 #> 12 [55-60)          0          0     0 #> 13 [60-65)          4.29       1     1 #> 14 [65-70)          4.46       0     1 #> 15 [70-75)          0.533      0     1 #> 16 [75-80)          0          0     0 #> 17 [80-85)          0          0     0 #> 18 [85-90)          0          0     0 #> 19 [90-95)          0          0     0 #> 20 [95-100)         0          0     0"},{"path":"https://rmgpanw.github.io/epiUtils/index.html","id":"who-standard-population","dir":"","previous_headings":"Quick Start","what":"WHO Standard Population","title":"Epidemiological Analysis Utilities","text":"Access built-2000-2025 World Standard Population:","code":"# Load WHO standard population data(\"who_2000_2025_standard_population\")  # View structure head(who_2000_2025_standard_population) #> # A tibble: 6 × 6 #>   age_group who_world_standard_perc…¹ recalculation_to_add…² rounded_to_integers #>   <chr>                         <dbl>                  <dbl>               <int> #> 1 0-4                            8.86                 88569.               88569 #> 2 5-9                            8.69                 86870.               86870 #> 3 10-14                          8.6                  85970.               85970 #> 4 15-19                          8.47                 84670.               84670 #> 5 20-24                          8.22                 82171.               82171 #> 6 25-29                          7.93                 79272.               79272 #> # ℹ abbreviated names: ¹​who_world_standard_percent, #> #   ²​recalculation_to_add_to_1million #> # ℹ 2 more variables: standard_for_seer_stat <int>, lower_age_limit <int>"},{"path":[]},{"path":"https://rmgpanw.github.io/epiUtils/index.html","id":"smart-case-count-handling","dir":"","previous_headings":"Advanced Features","what":"Smart Case Count Handling","title":"Epidemiological Analysis Utilities","text":"Warnings raised small case counts:","code":"# Data with small case counts small_counts_data <- data.frame(   age_group = c(\"0-20\", \"20-40\", \"40-60\"),   events = c(0L, 3L, 15L),  # Zero and small case counts   person_years = c(10000, 15000, 20000),   standard_pop = c(15000, 20000, 25000) )  # Calculate with warnings (default) result_with_warnings <- calculate_asr_direct(small_counts_data) #> Warning: ! Found age groups with small/zero case counts: #> • zero cases: 0-20 and < 5 cases: 20-40 (3 cases) #> ℹ Small and zero case counts may produce unstable rate estimates #> ℹ Consider wider age groups, longer follow-up, or data quality checks  # Calculate silently when appropriate result_silent <- calculate_asr_direct(small_counts_data, warn_small_cases = FALSE)"},{"path":"https://rmgpanw.github.io/epiUtils/index.html","id":"confidence-interval-methods","dir":"","previous_headings":"Advanced Features","what":"Confidence Interval Methods","title":"Epidemiological Analysis Utilities","text":"Choose two confidence interval calculation methods:","code":"# Gamma method (default) - more conservative for small counts and low rates result_gamma <- calculate_asr_direct(small_counts_data, warn_small_cases = FALSE)  # Byar's/Dobson method - traditional epidemiological approach   result_byars <- calculate_asr_direct(small_counts_data, ci_method = \"byars\", warn_small_cases = FALSE)  cat(\"Gamma CI:\", round(result_gamma$ci_lower_scaled, 1), \"-\", round(result_gamma$ci_upper_scaled, 1), \"\\n\") #> Gamma CI: 22.5 - 60.5 cat(\"Byar's CI:\", round(result_byars$ci_lower_scaled, 1), \"-\", round(result_byars$ci_upper_scaled, 1), \"\\n\") #> Byar's CI: 19.9 - 55.9"},{"path":"https://rmgpanw.github.io/epiUtils/index.html","id":"integration-with-standard-populations","dir":"","previous_headings":"Advanced Features","what":"Integration with Standard Populations","title":"Epidemiological Analysis Utilities","text":"Easily combine data standard populations:","code":"# Using WHO standard population directly who_subset <- who_2000_2025_standard_population[1:10, ]  # Create matching incidence data incidence_data <- who_subset |>   dplyr::mutate(     events = as.integer(c(5, 8, 12, 18, 25, 35, 45, 60, 75, 85)),     person_years = c(50000, 55000, 60000, 58000, 52000,                       48000, 42000, 35000, 25000, 15000),     standard_pop = standard_for_seer_stat   ) |>   dplyr::select(age_group, events, person_years, standard_pop)  # Calculate ASR who_result <- calculate_asr_direct(incidence_data) cat(\"ASR using WHO standard:\", round(who_result$asr_scaled, 1), \"per 100,000\\n\") #> ASR using WHO standard: 116 per 100,000"},{"path":"https://rmgpanw.github.io/epiUtils/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Epidemiological Analysis Utilities","text":"using epiUtils publications, please cite:","code":"citation(\"epiUtils\")"},{"path":"https://rmgpanw.github.io/epiUtils/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Epidemiological Analysis Utilities","text":"Contributions welcome! Please see contributing guidelines submit issues pull requests GitHub.","code":""},{"path":"https://rmgpanw.github.io/epiUtils/reference/calculate_asr_direct.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Age-Standardised Incidence Rates with Confidence Intervals — calculate_asr_direct","title":"Calculate Age-Standardised Incidence Rates with Confidence Intervals — calculate_asr_direct","text":"function calculates age-standardised incidence rates (ASR) using direct standardisation method gamma distribution-based confidence intervals. gamma method preferred naturally prevents negative confidence interval bounds standard approach epidemiological literature.","code":""},{"path":"https://rmgpanw.github.io/epiUtils/reference/calculate_asr_direct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Age-Standardised Incidence Rates with Confidence Intervals — calculate_asr_direct","text":"","code":"calculate_asr_direct(   .df,   conf_level = 0.95,   multiplier = 1e+05,   ci_method = \"gamma\",   warn_small_cases = TRUE )"},{"path":"https://rmgpanw.github.io/epiUtils/reference/calculate_asr_direct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Age-Standardised Incidence Rates with Confidence Intervals — calculate_asr_direct","text":".df data frame containing age-specific case counts, population data, standard population weights. Must contain following columns: age_group: Age group labels events: Number events/cases age group (integer) person_years: Person-years follow-population size age group (numeric) standard_pop: Standard population weights age group (numeric) conf_level Confidence level confidence intervals (default: 0.95) multiplier Multiplier rate expression (default: 100000 rates per 100,000) ci_method Character string specifying confidence interval calculation method. Options \"gamma\" (default) \"byars\". gamma method uses gamma distribution approach (consistent epitools), Byar's method uses Byar's approximation Dobson adjustment (consistent PHEindicatormethods). methods statistically valid; differences typically minimal. warn_small_cases Logical. TRUE (default), warns age groups zero < 5 cases may lead unstable rate estimates. Consider wider age groups stable results.","code":""},{"path":"https://rmgpanw.github.io/epiUtils/reference/calculate_asr_direct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Age-Standardised Incidence Rates with Confidence Intervals — calculate_asr_direct","text":"tibble containing: crude_rate: Crude incidence rate crude_rate_scaled: Crude rate multiplied multiplier asr: Age-standardised incidence rate asr_scaled: ASR multiplied multiplier ci_lower: Lower confidence interval bound ASR ci_upper: Upper confidence interval bound ASR ci_lower_scaled: Lower CI multiplied multiplier ci_upper_scaled: Upper CI multiplied multiplier conf_level: Confidence level used method: Method used CI calculation age_specific_data: Data frame age-specific rates details","code":""},{"path":"https://rmgpanw.github.io/epiUtils/reference/calculate_asr_direct.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Age-Standardised Incidence Rates with Confidence Intervals — calculate_asr_direct","text":"function uses gamma distribution method confidence interval calculation, standard approach epidemiological software like epitools. method naturally prevents negative confidence interval bounds appropriate rate data. direct standardisation method calculates ASR : ASR = Σ(w_i × r_i) w_i standardised weights r_i age-specific rates Age Grouping Considerations: Zero cases allowed may indicate low incidence small populations Age groups < 5 cases produce less stable rate estimates wider confidence intervals Consider wider age groups many strata cases age groups must positive person-years (mathematical requirement) function balances statistical stability age-specific precision","code":""},{"path":"https://rmgpanw.github.io/epiUtils/reference/calculate_asr_direct.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Age-Standardised Incidence Rates with Confidence Intervals — calculate_asr_direct","text":"Breslow, N. E., & Day, N. E. (1987). Statistical methods cancer research. Volume II–design analysis cohort studies. IARC scientific publications, (82), 1-406.","code":""},{"path":"https://rmgpanw.github.io/epiUtils/reference/calculate_asr_direct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Age-Standardised Incidence Rates with Confidence Intervals — calculate_asr_direct","text":"","code":"# Example data with required columns pop_data <- data.frame(   age_group = c(\"0-19\", \"20-39\", \"40-59\", \"60-79\", \"80+\"),   events = c(5L, 25L, 150L, 300L, 80L),   person_years = c(20000, 25000, 22000, 15000, 3000),   standard_pop = c(35000, 25000, 20000, 15000, 5000) )  # Calculate ASR result <- calculate_asr_direct(.df = pop_data)  # View results print(result$asr_scaled)  # ASR per 100,000 #> [1] 603.447 print(result$ci_lower_scaled)  # Lower CI per 100,000 #> [1] 553.1795 print(result$ci_upper_scaled)  # Upper CI per 100,000 #> [1] 657.7353"},{"path":"https://rmgpanw.github.io/epiUtils/reference/calculate_person_years_by_age_strata.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Person-Years by Age Strata — calculate_person_years_by_age_strata","title":"Calculate Person-Years by Age Strata — calculate_person_years_by_age_strata","text":"function calculates person-years follow-age strata cohort studies. handles age transitions follow-splitting person-time contributions across age groups individuals age observation period.","code":""},{"path":"https://rmgpanw.github.io/epiUtils/reference/calculate_person_years_by_age_strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Person-Years by Age Strata — calculate_person_years_by_age_strata","text":"","code":"calculate_person_years_by_age_strata(   .df,   age_cut_points = c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80,     85, 90, 95, 100) )"},{"path":"https://rmgpanw.github.io/epiUtils/reference/calculate_person_years_by_age_strata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Person-Years by Age Strata — calculate_person_years_by_age_strata","text":".df data frame containing individual-level follow-data age_cut_points Numeric vector age breakpoints defining age strata. Default 5-year age groups 0 100: c(0, 5, 10, ..., 95, 100)","code":""},{"path":"https://rmgpanw.github.io/epiUtils/reference/calculate_person_years_by_age_strata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Person-Years by Age Strata — calculate_person_years_by_age_strata","text":"tibble containing: age_group: Age group labels (factor) person_years: Total person-years follow-age group events: Number events age group","code":""},{"path":"https://rmgpanw.github.io/epiUtils/reference/calculate_person_years_by_age_strata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Person-Years by Age Strata — calculate_person_years_by_age_strata","text":"function requires following columns .df: patient_id: Unique identifier individual dob: Date birth (Date class) study_entry_date: Date study entry (Date class) study_exit_date: Date study exit/end follow-(Date class) event_status: Event indicator (integer: 1 = event occurred, 0 = censored) function automatically handles individuals transition age groups follow-splitting person-time contributions appropriately.","code":""},{"path":"https://rmgpanw.github.io/epiUtils/reference/calculate_person_years_by_age_strata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Person-Years by Age Strata — calculate_person_years_by_age_strata","text":"","code":"# Example data cohort_data <- data.frame(   patient_id = 1:3,   dob = as.Date(c(\"1960-01-15\", \"1955-06-20\", \"1972-09-01\")),   study_entry_date = as.Date(c(\"2020-03-01\", \"2021-01-01\", \"2019-01-01\")),   study_exit_date = as.Date(c(\"2024-06-15\", \"2025-12-31\", \"2022-04-10\")),   event_status = c(1L, 0L, 1L) )  # Calculate person-years by 5-year age groups result <- calculate_person_years_by_age_strata(cohort_data)  # Custom age groups custom_ages <- c(0, 20, 40, 60, 80, 100) result_custom <- calculate_person_years_by_age_strata(cohort_data, custom_ages)"},{"path":"https://rmgpanw.github.io/epiUtils/reference/epiUtils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"epiUtils: Epidemiological Analysis Utilities — epiUtils-package","title":"epiUtils: Epidemiological Analysis Utilities — epiUtils-package","text":"collection utility functions epidemiological analysis, including age-standardised rate calculations, person-years computation, common epidemiological methods cohort population-based studies.","code":""},{"path":[]},{"path":"https://rmgpanw.github.io/epiUtils/reference/epiUtils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"epiUtils: Epidemiological Analysis Utilities — epiUtils-package","text":"Maintainer: Alasdair Warwick alasdair.warwick.19@ucl.ac.uk (ORCID) [copyright holder]","code":""},{"path":"https://rmgpanw.github.io/epiUtils/reference/who_2000_2025_standard_population.html","id":null,"dir":"Reference","previous_headings":"","what":"World Health Organisation 2000-2025 World Standard Population — who_2000_2025_standard_population","title":"World Health Organisation 2000-2025 World Standard Population — who_2000_2025_standard_population","text":"Standard SEER*Stat 90-94 age group needed increased one total sum 1,000,000. group selected number closest rounding .","code":""},{"path":"https://rmgpanw.github.io/epiUtils/reference/who_2000_2025_standard_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"World Health Organisation 2000-2025 World Standard Population — who_2000_2025_standard_population","text":"","code":"who_2000_2025_standard_population"},{"path":[]},{"path":"https://rmgpanw.github.io/epiUtils/reference/who_2000_2025_standard_population.html","id":"who-standard-population","dir":"Reference","previous_headings":"","what":"who_2000_2025_standard_population","title":"World Health Organisation 2000-2025 World Standard Population — who_2000_2025_standard_population","text":"age_group Age Group who_world_standard_percent World Standard (%) recalculation_to_add_to_1million Recalculation add 1,000,000 rounded_to_integers Rounded Integers standard_for_seer_stat Standard SEER*Stat lower_age_limit Lower limit age group","code":""},{"path":"https://rmgpanw.github.io/epiUtils/reference/who_2000_2025_standard_population.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"World Health Organisation 2000-2025 World Standard Population — who_2000_2025_standard_population","text":"https://seer.cancer.gov/stdpopulations/world..html","code":""}]
